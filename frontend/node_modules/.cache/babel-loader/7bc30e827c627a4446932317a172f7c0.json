{"ast":null,"code":"var _jsxFileName = \"/home/eito/Downloads/Project/Heroe-App/frontend/src/components/layout/TextInputGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextInputGroup = props => {\n  const {\n    type,\n    label,\n    name,\n    value,\n    placeholder,\n    onChange,\n    error\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      name: name,\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': error\n      }),\n      placeholder: placeholder,\n      value: value,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TextInputGroup;\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\nexport default TextInputGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInputGroup\");","map":{"version":3,"sources":["/home/eito/Downloads/Project/Heroe-App/frontend/src/components/layout/TextInputGroup.js"],"names":["React","PropTypes","classnames","TextInputGroup","props","type","label","name","value","placeholder","onChange","error","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAE9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA,WAA5B;AAAyCC,IAAAA,QAAzC;AAAmDC,IAAAA;AAAnD,MAA6DP,KAAnE;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEG,IAAhB;AAAA,gBAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,IAAI,EAAED,IADV;AAEI,MAAA,IAAI,EAAEE,IAFV;AAGI,MAAA,SAAS,EAAEL,UAAU,CAAC,8BAAD,EAAiC;AAClD,sBAAcS;AADoC,OAAjC,CAHzB;AAMI,MAAA,WAAW,EAAEF,WANjB;AAOI,MAAA,KAAK,EAAED,KAPX;AAQI,MAAA,QAAQ,EAAEE;AARd;AAAA;AAAA;AAAA;AAAA,YAFJ,EAYKC,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,YAZd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CApBD;;KAAMR,c;AAsBNA,cAAc,CAACS,SAAf,GAA2B;AACvBN,EAAAA,KAAK,EAAEL,SAAS,CAACY,MAAV,CAAiBC,UADD;AAEvBP,EAAAA,IAAI,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UAFA;AAGvBL,EAAAA,WAAW,EAAER,SAAS,CAACY,MAAV,CAAiBC,UAHP;AAIvBN,EAAAA,KAAK,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UAJD;AAKvBT,EAAAA,IAAI,EAAEJ,SAAS,CAACY,MAAV,CAAiBC,UALA;AAMvBJ,EAAAA,QAAQ,EAAET,SAAS,CAACc,IAAV,CAAeD,UANF;AAOvBH,EAAAA,KAAK,EAAEV,SAAS,CAACY;AAPM,CAA3B;AAUAV,cAAc,CAACa,YAAf,GAA8B;AAC1BX,EAAAA,IAAI,EAAE;AADoB,CAA9B;AAIA,eAAeF,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = (props) => {\n\n    const { type, label, name, value, placeholder, onChange, error } = props\n\n    return (\n        <div className=\"form-group mb-3\">\n            <label htmlFor={name}>{label}</label>\n            <input\n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;"]},"metadata":{},"sourceType":"module"}